<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-06-03T21:47:59+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ljf12825’s Blog</title><subtitle>Efficient &amp; Elegant</subtitle><author><name>Jeff Lee</name><email>2548278761@qq.com</email></author><entry><title type="html">Unity Build-in Types</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Unity-Build-in-Types.html" rel="alternate" type="text/html" title="Unity Build-in Types" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Unity-Build-in-Types</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Unity-Build-in-Types.html"><![CDATA[]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Component</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Component.html" rel="alternate" type="text/html" title="Component" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Component</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Component.html"><![CDATA[<p>Component是附加在GameObject上的功能模块，每个组件都提供了某种行为或属性，组成了游戏对象的功能</p>

<h2 id="组件的特性">组件的特性</h2>

<table>
  <thead>
    <tr>
      <th>特性</th>
      <th>描述</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>附加性</strong></td>
      <td>可以给 GameObject 添加多个组件。</td>
    </tr>
    <tr>
      <td><strong>组合式设计</strong></td>
      <td>Unity 的架构是组合优于继承，一个 GameObject 的行为是由多个组件组合而成的。</td>
    </tr>
    <tr>
      <td><strong>可视化编辑</strong></td>
      <td>在 Unity Inspector 面板中可以直接添加、删除或修改组件。</td>
    </tr>
    <tr>
      <td><strong>脚本组件</strong></td>
      <td>你写的 C# 脚本，本质上也是组件，继承自 <code class="language-plaintext highlighter-rouge">MonoBehaviour</code>。</td>
    </tr>
  </tbody>
</table>

<h2 id="在代码中使用组件">在代码中使用组件</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//获取组件</span>
<span class="n">Rigidbody</span> <span class="n">rb</span> <span class="p">=</span> <span class="n">GetComponenet</span><span class="p">&lt;</span><span class="n">Rigidbody</span><span class="p">&gt;();</span>
<span class="c1">//添加组件</span>
<span class="n">gameObject</span><span class="p">.</span><span class="n">AddComponenet</span><span class="p">&lt;</span><span class="n">AudioSource</span><span class="p">&gt;();</span>
</code></pre></div></div>
<p>在Unity中，组件之所以能起作用，是因为Unity引擎在运行时会自动调度和执行组件的逻辑，这个背后是Unity引擎的核心“组件驱动”架构</p>

<h2 id="简单理解unity的工作循环--组件系统">简单理解：Unity的工作循环 + 组件系统</h2>
<p><strong>1.GameObject只是容器</strong>
<strong>2.组件发挥功能</strong>
<strong>3.Unity引擎每一帧都会遍历所有激活的GameObject，调度它们的组件做该做的事</strong></p>

<p><a href="/posts/2025-06-02-Unity-Architecture/">Unity组件驱动架构</a></p>

<h2 id="unity组件">Unity组件</h2>

<table>
  <thead>
    <tr>
      <th>Category</th>
      <th>Component Name</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Audio</strong></td>
      <td>Chorus Filter</td>
    </tr>
    <tr>
      <td> </td>
      <td>Distortion Filter</td>
    </tr>
    <tr>
      <td> </td>
      <td>Echo Filter</td>
    </tr>
    <tr>
      <td> </td>
      <td>High Pass Filter</td>
    </tr>
    <tr>
      <td> </td>
      <td>Listener</td>
    </tr>
    <tr>
      <td> </td>
      <td>Low Pass Filter</td>
    </tr>
    <tr>
      <td> </td>
      <td>Reverv Filter</td>
    </tr>
    <tr>
      <td> </td>
      <td>Reverv Zone</td>
    </tr>
    <tr>
      <td> </td>
      <td>Source</td>
    </tr>
    <tr>
      <td><strong>Effects</strong></td>
      <td>Halo</td>
    </tr>
    <tr>
      <td> </td>
      <td>Lens Flare</td>
    </tr>
    <tr>
      <td> </td>
      <td>Line Renderer</td>
    </tr>
    <tr>
      <td> </td>
      <td>Particle System</td>
    </tr>
    <tr>
      <td> </td>
      <td>Projector</td>
    </tr>
    <tr>
      <td> </td>
      <td>Trail Renderer</td>
    </tr>
    <tr>
      <td> </td>
      <td>Visual Effect</td>
    </tr>
    <tr>
      <td><strong>Event</strong></td>
      <td>Event System</td>
    </tr>
    <tr>
      <td> </td>
      <td>Event Trigger</td>
    </tr>
    <tr>
      <td> </td>
      <td>Graphic Raycaster</td>
    </tr>
    <tr>
      <td> </td>
      <td>Physics 2D Raycaster</td>
    </tr>
    <tr>
      <td> </td>
      <td>Physics Raycaster</td>
    </tr>
    <tr>
      <td> </td>
      <td>Standalone Input Module</td>
    </tr>
    <tr>
      <td> </td>
      <td>Touch Input Module</td>
    </tr>
    <tr>
      <td><strong>Layout</strong></td>
      <td>Aspect Ratio Fitter</td>
    </tr>
    <tr>
      <td> </td>
      <td>Canvas</td>
    </tr>
    <tr>
      <td> </td>
      <td>Canvas Group</td>
    </tr>
    <tr>
      <td> </td>
      <td>Cancas Scaler</td>
    </tr>
    <tr>
      <td> </td>
      <td>Content Size Fitter</td>
    </tr>
    <tr>
      <td> </td>
      <td>Grid Layout Group</td>
    </tr>
    <tr>
      <td> </td>
      <td>Horizontal Layout Group</td>
    </tr>
    <tr>
      <td> </td>
      <td>Layout Element</td>
    </tr>
    <tr>
      <td> </td>
      <td>Rect Transform</td>
    </tr>
    <tr>
      <td> </td>
      <td>Vertical Layout Group</td>
    </tr>
    <tr>
      <td><strong>Mesh</strong></td>
      <td>Mesh Filter</td>
    </tr>
    <tr>
      <td> </td>
      <td>Mesh Renderer</td>
    </tr>
    <tr>
      <td> </td>
      <td>Skinned Mesh Renderer</td>
    </tr>
    <tr>
      <td> </td>
      <td>TextMeshPro - Text</td>
    </tr>
    <tr>
      <td> </td>
      <td>Text Mesh <em>(Legacy)</em></td>
    </tr>
    <tr>
      <td><strong>Miscellaneous</strong></td>
      <td>Aim Constraint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Animation</td>
    </tr>
    <tr>
      <td> </td>
      <td>Animator</td>
    </tr>
    <tr>
      <td> </td>
      <td>Billboard Renderer</td>
    </tr>
    <tr>
      <td> </td>
      <td>Grid</td>
    </tr>
    <tr>
      <td> </td>
      <td>Look At Constraint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Parent Constraint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Particle System Force Field</td>
    </tr>
    <tr>
      <td> </td>
      <td>Position Constraint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Rotation Constraint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Scale Constraint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Sprite Mask</td>
    </tr>
    <tr>
      <td> </td>
      <td>Sprite Shape Renderer</td>
    </tr>
    <tr>
      <td> </td>
      <td>Terrain</td>
    </tr>
    <tr>
      <td> </td>
      <td>Wind Zone</td>
    </tr>
    <tr>
      <td><strong>Navigation</strong></td>
      <td>Nav Mesh Agent</td>
    </tr>
    <tr>
      <td> </td>
      <td>Nav Mesh Obstacle</td>
    </tr>
    <tr>
      <td> </td>
      <td>Off Mesh Link</td>
    </tr>
    <tr>
      <td><strong>Physics 2D</strong></td>
      <td>Area Effector 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Box Collider 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Buoyancy Effector 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Capsule Collider 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Circle Collider 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Composite Collider 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Constant Force 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Custom Collider 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Distance Joint 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Edge Collider 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Fixed Joint 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Friction Joint 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Hinge Joint 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Platform Effector 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Point Effector 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Polygon Collider 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Relative Joint 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Rigidbody 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Slider Joint 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Spring Joint 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Surface Effector 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Target Joint 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Wheel Joint 2D</td>
    </tr>
    <tr>
      <td><strong>Physics</strong></td>
      <td>Articulation Body</td>
    </tr>
    <tr>
      <td> </td>
      <td>Box Collider</td>
    </tr>
    <tr>
      <td> </td>
      <td>Capsule Collider</td>
    </tr>
    <tr>
      <td> </td>
      <td>Character Controller</td>
    </tr>
    <tr>
      <td> </td>
      <td>Character Joint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Cloth</td>
    </tr>
    <tr>
      <td> </td>
      <td>Configurable Joint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Constant Force</td>
    </tr>
    <tr>
      <td> </td>
      <td>Fixed Joint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Hinge Joint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Mesh Collider</td>
    </tr>
    <tr>
      <td> </td>
      <td>Rigidbody</td>
    </tr>
    <tr>
      <td> </td>
      <td>Sphere Collider</td>
    </tr>
    <tr>
      <td> </td>
      <td>Spring Joint</td>
    </tr>
    <tr>
      <td> </td>
      <td>Terrain Collider</td>
    </tr>
    <tr>
      <td> </td>
      <td>Wheel Collider</td>
    </tr>
    <tr>
      <td><strong>Playables</strong></td>
      <td>Playable Director</td>
    </tr>
    <tr>
      <td><strong>Rendering</strong></td>
      <td>Camera</td>
    </tr>
    <tr>
      <td> </td>
      <td>Canvas Renderer</td>
    </tr>
    <tr>
      <td> </td>
      <td>Flare Layer</td>
    </tr>
    <tr>
      <td> </td>
      <td>LOD Group</td>
    </tr>
    <tr>
      <td> </td>
      <td>Light</td>
    </tr>
    <tr>
      <td> </td>
      <td>Light Probe Group</td>
    </tr>
    <tr>
      <td> </td>
      <td>Light Probe Proxy Volume</td>
    </tr>
    <tr>
      <td> </td>
      <td>Occlusion Area</td>
    </tr>
    <tr>
      <td> </td>
      <td>Occlusion Portal</td>
    </tr>
    <tr>
      <td> </td>
      <td>Reflection Probe</td>
    </tr>
    <tr>
      <td> </td>
      <td>Skybox</td>
    </tr>
    <tr>
      <td> </td>
      <td>Sorting Group</td>
    </tr>
    <tr>
      <td> </td>
      <td>Sprite Renderer</td>
    </tr>
    <tr>
      <td> </td>
      <td>Streaming Controller</td>
    </tr>
    <tr>
      <td><strong>Scripts</strong></td>
      <td><em>(空内容，如需添加请提供)</em></td>
    </tr>
    <tr>
      <td><strong>Tilemap</strong></td>
      <td>Tilemap</td>
    </tr>
    <tr>
      <td> </td>
      <td>Tilemap Collider 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Tilemap Renderer</td>
    </tr>
    <tr>
      <td><strong>UI Toolkit</strong></td>
      <td>Panel Event Handler</td>
    </tr>
    <tr>
      <td> </td>
      <td>Panel Raycaster</td>
    </tr>
    <tr>
      <td> </td>
      <td>UI Document</td>
    </tr>
    <tr>
      <td><strong>UI</strong></td>
      <td>Button</td>
    </tr>
    <tr>
      <td> </td>
      <td>Dropdown - TMP</td>
    </tr>
    <tr>
      <td> </td>
      <td>Effects - Outline</td>
    </tr>
    <tr>
      <td> </td>
      <td>Effects - Position As UV1</td>
    </tr>
    <tr>
      <td> </td>
      <td>Effects - Shadow</td>
    </tr>
    <tr>
      <td> </td>
      <td>Image</td>
    </tr>
    <tr>
      <td> </td>
      <td>Mask</td>
    </tr>
    <tr>
      <td> </td>
      <td>Raw Image</td>
    </tr>
    <tr>
      <td> </td>
      <td>Rect Mask 2D</td>
    </tr>
    <tr>
      <td> </td>
      <td>Scroll Rect</td>
    </tr>
    <tr>
      <td> </td>
      <td>Scrollbar</td>
    </tr>
    <tr>
      <td> </td>
      <td>Selectable</td>
    </tr>
    <tr>
      <td> </td>
      <td>Slider</td>
    </tr>
    <tr>
      <td> </td>
      <td>TMP - Input Field</td>
    </tr>
    <tr>
      <td> </td>
      <td>TMP - Text</td>
    </tr>
    <tr>
      <td> </td>
      <td>Toggle</td>
    </tr>
    <tr>
      <td> </td>
      <td>Toggle Group</td>
    </tr>
    <tr>
      <td> </td>
      <td>Dropdown <em>(Legacy)</em></td>
    </tr>
    <tr>
      <td> </td>
      <td>Input Field <em>(Legacy)</em></td>
    </tr>
    <tr>
      <td> </td>
      <td>Text <em>(Legacy)</em></td>
    </tr>
    <tr>
      <td><strong>Video</strong></td>
      <td>Video Player</td>
    </tr>
    <tr>
      <td><strong>Visual Scripting</strong></td>
      <td>Animator Message Listener <em>(Listener)</em></td>
    </tr>
    <tr>
      <td> </td>
      <td>Script Machine</td>
    </tr>
    <tr>
      <td> </td>
      <td>State Machine</td>
    </tr>
    <tr>
      <td> </td>
      <td>Variables</td>
    </tr>
  </tbody>
</table>]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[Component是附加在GameObject上的功能模块，每个组件都提供了某种行为或属性，组成了游戏对象的功能]]></summary></entry><entry><title type="html">Physics System</title><link href="http://localhost:4000/posts/2025-06-03-Physics-System/" rel="alternate" type="text/html" title="Physics System" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/posts/Physics-System</id><content type="html" xml:base="http://localhost:4000/posts/2025-06-03-Physics-System/"><![CDATA[]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Multithread</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Multithread.html" rel="alternate" type="text/html" title="Multithread" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Multithread</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Multithread.html"><![CDATA[]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Input System</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Input-System.html" rel="alternate" type="text/html" title="Input System" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Input-System</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Input-System.html"><![CDATA[]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">FSM</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/FSM.html" rel="alternate" type="text/html" title="FSM" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/FSM</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/FSM.html"><![CDATA[]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Gizmos</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Gizmos.html" rel="alternate" type="text/html" title="Gizmos" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Gizmos</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Gizmos.html"><![CDATA[]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Event System</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Event-System.html" rel="alternate" type="text/html" title="Event System" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Event-System</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Event-System.html"><![CDATA[]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Import Assets</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Import-assets.html" rel="alternate" type="text/html" title="Import Assets" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Import-assets</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Import-assets.html"><![CDATA[<p>Unity支持多种格式的资源文件，并能自动识别并进行初步处理</p>

<h2 id="资源导入基本流程">资源导入基本流程</h2>
<p><strong>1.将资源文件拖入<code class="language-plaintext highlighter-rouge">Assets</code>目录中（Unity会自动导入）</strong><br />
<strong>2.在Inspector面板中查看导入设置</strong><br />
<strong>3.配置相关参数，比如压缩方式、贴图类型、是否生成碰撞体等</strong><br />
<strong>4.使用资源（拖到场景、作为材质贴图、挂到AudioSource等）</strong></p>

<h2 id="模型">模型</h2>

<h3 id="支持格式">支持格式</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">.fbx</code>推荐</li>
  <li><code class="language-plaintext highlighter-rouge">.obj</code></li>
  <li><code class="language-plaintext highlighter-rouge">.dae</code>（Collada）</li>
  <li><code class="language-plaintext highlighter-rouge">.blend</code>（需要Blender）</li>
</ul>

<h3 id="导入流程">导入流程</h3>
<p>1.拖拽<code class="language-plaintext highlighter-rouge">.fbx</code>文件到<code class="language-plaintext highlighter-rouge">Assets</code>文件夹<br />
2.选中模型文件，查看<code class="language-plaintext highlighter-rouge">Inspector</code>的导入设置</p>
<ul>
  <li>Scale Factor：缩放（一般保持默认）</li>
  <li>Import Animations：是否导入动画</li>
  <li>Import Materials：是否导入材质</li>
  <li>Generate Colliders：是否自动生成碰撞体</li>
</ul>

<h3 id="导入后组成">导入后组成</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">Model</code>: 3D网格</li>
  <li><code class="language-plaintext highlighter-rouge">Rig</code>（如果有骨骼）：用于动画绑定</li>
  <li><code class="language-plaintext highlighter-rouge">Animation</code>：包含的动画片段</li>
  <li><code class="language-plaintext highlighter-rouge">Materials</code>：自动生成或关联的材质</li>
</ul>

<h2 id="贴图">贴图</h2>

<h3 id="支持格式-1">支持格式</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">.png</code>、<code class="language-plaintext highlighter-rouge">.jpg</code>、<code class="language-plaintext highlighter-rouge">.tga</code>、<code class="language-plaintext highlighter-rouge">.psd</code>（支持图层）等</li>
</ul>

<h3 id="导入流程-1">导入流程</h3>

<p>1.拖入图片文件
2.在Inspector中设置：</p>
<ul>
  <li>sRGB（Color Texture）：颜色贴图用，法线贴图需取消勾选</li>
  <li>Alpha Is Transparency：如果使用透明通道</li>
  <li>Wrap Mode：Repeat（平铺）或Clamp（拉伸）</li>
  <li>Filter Mode：Bilinear、Trilinear、Point（像素风）</li>
  <li>Compression：高压缩（小体积）还是高质量（清晰）</li>
  <li>Texture Type:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Default</code>（通用）</li>
      <li><code class="language-plaintext highlighter-rouge">Sprite</code>（用于UI）</li>
      <li><code class="language-plaintext highlighter-rouge">Normal map</code>（法线贴图）</li>
      <li><code class="language-plaintext highlighter-rouge">Lightmap</code>（光照图）</li>
    </ul>
  </li>
</ul>

<h2 id="音频">音频</h2>

<h3 id="支持格式-2">支持格式</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">.mp3</code>（压缩）</li>
  <li><code class="language-plaintext highlighter-rouge">.wav</code>（无损）</li>
  <li><code class="language-plaintext highlighter-rouge">.ogg</code>（高效）</li>
  <li><code class="language-plaintext highlighter-rouge">.aiff</code></li>
</ul>

<h2 id="导入流程-2">导入流程</h2>

<p>1.拖入音频文件<br />
2.在<code class="language-plaintext highlighter-rouge">Inspector</code>中设置：</p>
<ul>
  <li>Load Type：
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Decompress On Load</code>（加载时解压，适合短音效）</li>
      <li><code class="language-plaintext highlighter-rouge">Streaming</code>（边播放边加载，适合背景音乐）</li>
    </ul>
  </li>
  <li>Compression Format:
    <ul>
      <li><code class="language-plaintext highlighter-rouge">Vorbis</code>、<code class="language-plaintext highlighter-rouge">ADPCM</code>、<code class="language-plaintext highlighter-rouge">PCM</code></li>
    </ul>
  </li>
  <li>3D Sound：是否启用3D空间化</li>
  <li>Loop：是否循环播放</li>
</ul>

<blockquote>
  <p><strong>资源组织建议：</strong> 使用好的文件夹结构和命名习惯，可以极大提高开发效率</p>
</blockquote>]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><summary type="html"><![CDATA[Unity支持多种格式的资源文件，并能自动识别并进行初步处理]]></summary></entry><entry><title type="html">Layer</title><link href="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Layer.html" rel="alternate" type="text/html" title="Layer" /><published>2025-06-01T00:00:00+08:00</published><updated>2025-06-01T00:00:00+08:00</updated><id>http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Layer</id><content type="html" xml:base="http://localhost:4000/%E7%AC%94%E8%AE%B0/2025/06/01/Layer.html"><![CDATA[<p>在Unity中，Layer是要给非常重要的系统<br />
它主要用于：</p>
<ul>
  <li>控制物体的渲染与相机的可见性</li>
  <li>控制物理碰撞（配合Layer Collision Matrix）</li>
  <li>通过脚本进行物体分类和筛选</li>
</ul>

<h2 id="什么是layer">什么是Layer</h2>

<p>Layer是给GameObject打的“标签”，但它和<code class="language-plaintext highlighter-rouge">Tag</code>不一样，Layer是用于功能性控制的，特别在：</p>
<ul>
  <li>摄像机的Culling Mask</li>
  <li>光照影响（Light Culling）</li>
  <li>物理碰撞（Physics Layer）</li>
  <li>射线检测（Raycast Layer）</li>
</ul>

<h2 id="layer的使用场景">Layer的使用场景</h2>
<h3 id="1摄像机视野控制culling-mask">1.摄像机视野控制（Culling Mask）</h3>
<p>在Camera组件中，你可以设置</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Culling Mask -&gt; 选择哪些Layer可以被该相机看到
</code></pre></div></div>

<p><strong>用途：</strong></p>
<ul>
  <li>UI相机只看UI层</li>
  <li>小地图相机只看敌人层</li>
  <li>分屏镜头每个只看自己的部分</li>
</ul>

<h3 id="2物理碰撞控制layer-collision-matrix">2.物理碰撞控制（Layer Collision Matrix）</h3>
<p>在菜单中：</p>

<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Edit</span> <span class="s">-&gt;</span> <span class="s">Project</span> <span class="s">Settings</span> <span class="s">-&gt;</span> <span class="s">Physics</span>
</code></pre></div></div>

<p>你可以看到Layer Collision Matrix，它控制：</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>哪些Layer和哪些Layer能发生物理碰撞
</code></pre></div></div>

<p><strong>用途：</strong></p>
<ul>
  <li>玩家层与敌人层可以碰撞，但不和自身碰撞</li>
  <li>子弹不撞自己</li>
  <li>角色不被UI的Collider打断</li>
</ul>

<h3 id="3射线检测">3.射线检测</h3>
<p>可以通过Layer来控制射线是否命中某个对象</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">layerMask</span> <span class="p">=</span> <span class="m">1</span> <span class="p">&lt;&lt;</span> <span class="n">LayerMask</span><span class="p">.</span><span class="nf">NameToLayer</span><span class="p">(</span><span class="s">"Enemy"</span><span class="p">);</span>
<span class="k">if</span> <span class="p">(</span><span class="n">Physics</span><span class="p">.</span><span class="nf">Raycast</span><span class="p">(</span><span class="n">ray</span><span class="p">,</span> <span class="k">out</span> <span class="n">hit</span><span class="p">,</span> <span class="m">100f</span><span class="p">,</span> <span class="n">layerMask</span><span class="p">))</span> <span class="n">Debug</span><span class="p">.</span><span class="nf">Log</span><span class="p">(</span><span class="s">"Hit enemy"</span><span class="p">);</span>
</code></pre></div></div>

<p>也可以多层合并：</p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">mask</span> <span class="p">=</span> <span class="p">(</span><span class="m">1</span> <span class="p">&lt;&lt;</span> <span class="n">LayerMask</span><span class="p">.</span><span class="nf">NameToLayer</span><span class="p">(</span><span class="s">"Enemy"</span><span class="p">))</span> <span class="p">|</span> <span class="p">(</span><span class="m">1</span> <span class="p">&lt;&lt;</span> <span class="n">LayerMask</span><span class="p">.</span><span class="nf">NameToLayer</span><span class="p">(</span><span class="s">"NPC"</span><span class="p">));</span>
</code></pre></div></div>
<h2 id="内置与自定义layer">内置与自定义Layer</h2>

<h3 id="内置layerunity默认的">内置Layer（Unity默认的）</h3>

<table>
  <thead>
    <tr>
      <th>编号</th>
      <th>名称</th>
      <th>说明</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0</td>
      <td>Default</td>
      <td>默认层</td>
    </tr>
    <tr>
      <td>4</td>
      <td>Water</td>
      <td>水体特效</td>
    </tr>
    <tr>
      <td>5</td>
      <td>UI</td>
      <td>UI 专用</td>
    </tr>
  </tbody>
</table>

<h3 id="自定义layer">自定义Layer</h3>
<p>Unity允许你最多使用32个Layer（编号 0~31），其中前几个是保留的<br />
自定义方式：</p>
<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">选中</span> <span class="n">GameObject</span> <span class="o">-&gt;</span> <span class="n">Inspector</span> <span class="o">-&gt;</span> <span class="n">Layer</span> <span class="o">-&gt;</span> <span class="k">Add</span> <span class="n">Layer</span><span class="p">...</span>
</code></pre></div></div>
<p>添加后可为GameObject设置：</p>
<div class="language-nginx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Layer</span> <span class="s">-&gt;</span> <span class="s">你刚添加的层名</span>
</code></pre></div></div>
<h2 id="layer与tag的区别">Layer与Tag的区别</h2>

<table>
  <thead>
    <tr>
      <th>特性</th>
      <th>Layer</th>
      <th>Tag</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>数量限制</td>
      <td>最多 32 个</td>
      <td>无限制</td>
    </tr>
    <tr>
      <td>用于渲染控制</td>
      <td>✅</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>用于物理控制</td>
      <td>✅</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>用于分类查找</td>
      <td>有限制（用 LayerMask）</td>
      <td>✅（用 CompareTag 等）</td>
    </tr>
    <tr>
      <td>性能优化</td>
      <td>✅（用于剔除、射线过滤）</td>
      <td>❌</td>
    </tr>
  </tbody>
</table>

<h3 id="建议">建议</h3>
<ul>
  <li>给每种功能的对象分配专属Layer</li>
  <li>摄像机、光源、UI、Trigger检测都应依赖Layer控制逻辑</li>
</ul>]]></content><author><name>ljf12825</name></author><category term="笔记" /><category term="Unity" /><category term="Unity System" /><summary type="html"><![CDATA[在Unity中，Layer是要给非常重要的系统 它主要用于： 控制物体的渲染与相机的可见性 控制物理碰撞（配合Layer Collision Matrix） 通过脚本进行物体分类和筛选]]></summary></entry></feed>