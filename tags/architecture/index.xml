<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on How to Develop a Game</title><link>https://ljf12825.github.io/tags/architecture/</link><description>Recent content in Architecture on How to Develop a Game</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 01 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ljf12825.github.io/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Data Driven Design(DDD)</title><link>https://ljf12825.github.io/blog/data-driven-design/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/data-driven-design/</guid><description>Application of Data Driven Design(DDD) in the article. Practice methods and application scenarios.</description></item><item><title>Dependency Injection(DI)</title><link>https://ljf12825.github.io/blog/dependency-injection/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/dependency-injection/</guid><description>Concept, implement and application of DI</description></item><item><title>Design Patterns in Game Development</title><link>https://ljf12825.github.io/blog/design-patterns-in-game-development/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/design-patterns-in-game-development/</guid><description>Introducing and guide of all the design patterns in game development.</description></item><item><title>ECS</title><link>https://ljf12825.github.io/blog/ecs/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/ecs/</guid><description>ECS introduction and instructions</description></item><item><title>Event Bus/Aggregator</title><link>https://ljf12825.github.io/blog/event-bus-event-aggregator/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/event-bus-event-aggregator/</guid><description>Introducing, Usage and implement of Event Bus/Aggregator</description></item><item><title>Event-Driven Architecture</title><link>https://ljf12825.github.io/blog/event-driven-architecture/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/event-driven-architecture/</guid><description>The usage of C# Delegate and Event in Unity</description></item><item><title>Game Architecture</title><link>https://ljf12825.github.io/blog/game-architecture/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/game-architecture/</guid><description>Common Architecture in game development</description></item><item><title>Interface Oriented Design</title><link>https://ljf12825.github.io/blog/interface-oriented-design/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/interface-oriented-design/</guid><description>Introduction the thinking of Interface Oriented</description></item><item><title>Loose Coupling</title><link>https://ljf12825.github.io/blog/loose-coupling/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/loose-coupling/</guid><description>Introductions the idea of loose coupling and serveral common loose coupling practice(Delegate/Event, Interface and Abstract, ScriptabbleObject, EventBus, DI/Service Locate), as well as example of anti-patterns</description></item><item><title>Service Locator</title><link>https://ljf12825.github.io/blog/service-locator/</link><pubDate>Sun, 01 Jun 2025 00:00:00 +0000</pubDate><guid>https://ljf12825.github.io/blog/service-locator/</guid><description>Implement of Service Locator</description></item></channel></rss>